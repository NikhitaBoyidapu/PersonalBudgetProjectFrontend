{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bnikh\\\\Desktop\\\\NBAD\\\\src\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const calculateDifferenceForCategoryAndMonth = (categoryName, month, dataSource) => {\n  const categoryIndex = dataSource.labels.indexOf(categoryName);\n  if (categoryIndex !== -1) {\n    const budget = dataSource.datasets[0].data[categoryIndex];\n    const expenses = dataSource.datasets[0].expense[categoryIndex];\n\n    // Assuming dataSource.labels and dataSource.datasets[0].month are in lowercase\n    const matchingMonthIndex = dataSource.datasets[0].month.indexOf(month.toLowerCase());\n    if (matchingMonthIndex !== -1 && categoryIndex !== -1 && matchingMonthIndex === categoryIndex) {\n      const difference = budget - expenses;\n      return difference;\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n};\nfunction Dashboard() {\n  _s();\n  const username = localStorage.getItem('username');\n  const token = localStorage.getItem('jwt');\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  function decodingJWT(token) {\n    try {\n      const base64payload = token.split('.')[1].replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      console.error('Error decoding JWT token:', error);\n      return {};\n    }\n  }\n  useEffect(() => {\n    console.log('LoginPage - Initial Authenticated:', localStorage.getItem('jwt'));\n    const existingToken = localStorage.getItem('jwt');\n    if (existingToken) {\n      const decodedToken = decodingJWT(existingToken);\n      const issuedAt = decodedToken.iat;\n      const expiresIn = decodedToken.exp - issuedAt;\n      console.log('LoginPage - expiresIn:', expiresIn);\n      const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n      console.log('currentTimeInSeconds::', currentTimeInSeconds);\n      // Show a warning popup 20 seconds before the token expires\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n        if (!userResponse || currentTimeInSeconds - issuedAt > expiresIn) {\n          // User clicked 'Cancel', logout the user\n\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n\n      // Clear the warning timeout when the component unmounts\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n  const options = months.map(month => ({\n    label: month,\n    value: month.toLowerCase() // using lowercase for consistency\n  }));\n  const [selectedMonth1, setSelectedMonth1] = React.useState('');\n  const [selectedMonth2, setSelectedMonth2] = React.useState('');\n  const handleChange1 = event => {\n    setSelectedMonth1(event.target.value);\n  };\n  const handleChange2 = event => {\n    setSelectedMonth2(event.target.value);\n  };\n  const [dataSource, setDataSource] = useState({\n    datasets: [{\n      data: [],\n      backgroundColor: [],\n      expense: [],\n      month: []\n    }],\n    labels: []\n  });\n  const createChart = () => {\n    const ctx = document.getElementById('myChart').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredExpenses = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    const filteredBudget = dataSource.datasets[0].data.filter((budget, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    const filteredLabels = dataSource.labels.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth1);\n    if (filteredLabels.length === 0) {\n      // If no expenses for the selected month, display a message\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            label: 'Total Budget',\n            data: filteredBudget,\n            backgroundColor: 'rgba(0, 0, 139, 0.65)',\n            borderWidth: 1\n          }, {\n            label: 'Expense',\n            data: filteredExpenses,\n            backgroundColor: 'rgba(255, 99, 132, 0.6)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n    ;\n  };\n  const createPieChart = () => {\n    const ctx = document.getElementById('chart2').getContext('2d');\n\n    // Check if a chart instance already exists and destroy it\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredData = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === selectedMonth2);\n    const filteredLabels = dataSource.labels.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth2);\n    const filteredColors = dataSource.datasets[0].backgroundColor.filter((_, index) => dataSource.datasets[0].month[index] === selectedMonth2);\n    if (filteredData.length === 0) {\n      // If no expenses for the selected month, display a message\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      // If there are expenses, create the pie chart\n      new Chart(ctx, {\n        type: 'pie',\n        data: {\n          labels: filteredLabels,\n          datasets: [{\n            data: filteredData,\n            backgroundColor: filteredColors,\n            // Use colors from the database\n            borderWidth: 1\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          legend: {\n            position: 'right'\n          }\n        }\n      });\n    }\n  };\n  const date = new Date();\n  const monthName = months[date.getMonth()];\n  console.log(monthName);\n  const createStackedLineChart = () => {\n    const ctx = document.getElementById('chart3').getContext('2d');\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    const filteredExpenses = dataSource.datasets[0].expense.filter((expense, index) => dataSource.datasets[0].month[index] === monthName.toLowerCase());\n    const filteredBudget = dataSource.datasets[0].data.filter((budget, index) => dataSource.datasets[0].month[index] === monthName.toLowerCase());\n    if (filteredBudget.length === 0) {\n      // If no expenses for the selected month, display a message\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.font = '20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n    } else {\n      const amountDifference = filteredBudget.map((budget, index) => {\n        const expenses = filteredExpenses[index];\n        return budget - expenses;\n      });\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: dataSource.labels,\n          datasets: [{\n            label: 'Budget',\n            data: filteredBudget,\n            borderColor: 'rgba(0, 255, 0, 0.8)',\n            backgroundColor: 'rgba(0, 255, 0, 0.2)',\n            borderWidth: 2,\n            fill: 'origin'\n          }, {\n            label: 'Expenses',\n            data: filteredExpenses,\n            borderColor: 'rgba(255, 0, 0, 0.8)',\n            backgroundColor: 'rgba(255, 0, 0, 0.2)',\n            borderWidth: 2,\n            fill: '-1'\n          }, {\n            label: 'Amount Difference',\n            data: amountDifference,\n            borderColor: 'rgba(0, 0, 255, 0.8)',\n            backgroundColor: 'rgba(0, 0, 255, 0.2)',\n            borderWidth: 2,\n            fill: '-1'\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Months'\n              }\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Amount'\n              }\n            }\n          }\n        }\n      });\n    }\n    ;\n  };\n  useEffect(() => {\n    createPieChart();\n  }, [selectedMonth2, dataSource]);\n  useEffect(() => {\n    createChart();\n  }, [selectedMonth1, dataSource]);\n  const getBudget = () => {\n    axios.get(`https://seashell-app-pjx64.ondigitalocean.app/api/budget/${username}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (res) {\n      console.log(res.data);\n      for (var i = 0; i < res.data.length; i++) {\n        dataSource.datasets[0].data[i] = res.data[i].budget;\n        dataSource.labels[i] = res.data[i].title;\n        dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n        dataSource.datasets[0].expense[i] = res.data[i].expense;\n        dataSource.datasets[0].month[i] = res.data[i].month;\n      }\n      // createChart();\n      createStackedLineChart();\n    }).catch(function (error) {\n      console.error('Error fetching budget data:', error);\n    });\n  };\n  useEffect(() => {\n    getBudget();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dash-head\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-head\",\n        children: [\"Welcome to \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [username, \"'s \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 53\n        }, this), \"Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/newcategory\",\n        className: \"create-category\",\n        children: \"Add/ Modify Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/deletecategory\",\n        className: \"create-category\",\n        children: \"Delete Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"logout-link\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"charts\",\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart chart1\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Budget and Expenses based on Category for \", selectedMonth1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMonth1,\n            onChange: handleChange1,\n            \"aria-label\": \"Select a month\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: '',\n              disabled: true,\n              hidden: true,\n              children: \"Select a month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 5\n            }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.label\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 7\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"myChart\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart chart2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"All the expenses for \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: selectedMonth2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 30\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select a month:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMonth2,\n              onChange: handleChange2,\n              \"aria-label\": \"Select a month\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: '',\n                disabled: true,\n                hidden: true,\n                children: \"Select a month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 5\n              }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 7\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"chart2\",\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"chart chart3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Ranges for budget and expenses for this month \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"chart3\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 7\n  }, this);\n}\n_s(Dashboard, \"gKxLPTwiuH19BnDpz5r2SRv0LVE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","Chart","jsxDEV","_jsxDEV","calculateDifferenceForCategoryAndMonth","categoryName","month","dataSource","categoryIndex","labels","indexOf","budget","datasets","data","expenses","expense","matchingMonthIndex","toLowerCase","difference","Dashboard","_s","username","localStorage","getItem","token","months","decodingJWT","base64payload","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","error","console","log","existingToken","decodedToken","issuedAt","iat","expiresIn","exp","currentTimeInSeconds","Math","floor","Date","now","warningTime","warningTimeout","setTimeout","userResponse","window","confirm","removeItem","location","reload","clearTimeout","options","label","value","selectedMonth1","setSelectedMonth1","selectedMonth2","setSelectedMonth2","handleChange1","event","target","handleChange2","setDataSource","backgroundColor","createChart","ctx","document","getElementById","getContext","existingChart","getChart","destroy","filteredExpenses","filter","index","filteredBudget","filteredLabels","_","length","clearRect","canvas","width","height","font","textAlign","fillText","type","borderWidth","scales","y","display","createPieChart","filteredData","filteredColors","responsive","maintainAspectRatio","legend","position","date","monthName","getMonth","createStackedLineChart","amountDifference","borderColor","fill","x","title","text","getBudget","get","headers","Authorization","then","res","i","color","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","onChange","disabled","hidden","option","id","_c","$RefreshReg$"],"sources":["C:/Users/bnikh/Desktop/NBAD/src/Dashboard/Dashboard.js"],"sourcesContent":["  import React, { useState, useEffect } from 'react';\n  import { Link } from 'react-router-dom';\n  import axios from 'axios';\n  import Chart from 'chart.js/auto';\n\n   export const calculateDifferenceForCategoryAndMonth = (categoryName, month, dataSource) => {\n    const categoryIndex = dataSource.labels.indexOf(categoryName);\n  \n    if (categoryIndex !== -1) {\n      const budget = dataSource.datasets[0].data[categoryIndex];\n      const expenses = dataSource.datasets[0].expense[categoryIndex];\n  \n      // Assuming dataSource.labels and dataSource.datasets[0].month are in lowercase\n      const matchingMonthIndex = dataSource.datasets[0].month.indexOf(month.toLowerCase());\n  \n      if (matchingMonthIndex !== -1 && categoryIndex !== -1 && matchingMonthIndex === categoryIndex) {\n        const difference = budget - expenses;\n        return difference;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  };\n  \n  function Dashboard() {\n    const username = localStorage.getItem('username');\n    const token = localStorage.getItem('jwt');\n    const months = [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n    ];\n\n    function decodingJWT(token) {\n      try {\n          const base64payload = (token.split('.')[1]).replace(/-/g, '+').replace(/_/g, '/');\n          const jsonPayload = decodeURIComponent(atob(base64payload).split('').map(function(c) {\n               return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n          }).join(''));\n  \n          return JSON.parse(jsonPayload);\n          } catch (error) {\n              console.error('Error decoding JWT token:', error);\n              return {};\n          }\n      }\n      useEffect(() => {\n        console.log('LoginPage - Initial Authenticated:', localStorage.getItem('jwt'));\n        const existingToken = localStorage.getItem('jwt');\n        if (existingToken) {\n          const decodedToken = decodingJWT(existingToken);\n          const issuedAt = decodedToken.iat; \n          const expiresIn = decodedToken.exp - issuedAt;\n          console.log('LoginPage - expiresIn:', expiresIn);\n          const currentTimeInSeconds = Math.floor(Date.now() / 1000);\n          console.log('currentTimeInSeconds::',currentTimeInSeconds);\n         // Show a warning popup 20 seconds before the token expires\n      const warningTime = expiresIn - 20;\n      const warningTimeout = setTimeout(() => {\n        const userResponse = window.confirm('Your session will expire in 20 seconds. Do you want to continue?');\n\n        if (!userResponse || currentTimeInSeconds-issuedAt>expiresIn) {\n          // User clicked 'Cancel', logout the user\n\n          localStorage.removeItem('jwt');\n          localStorage.removeItem('username');\n          window.location.reload();\n        }\n      }, warningTime * 1000);\n\n      // Clear the warning timeout when the component unmounts\n      return () => clearTimeout(warningTimeout);\n    }\n  }, []);\n\n    const options = months.map((month) => ({\n      label: month,\n      value: month.toLowerCase(), // using lowercase for consistency\n    }));\n\n    const [selectedMonth1, setSelectedMonth1] = React.useState('');\n    const [selectedMonth2, setSelectedMonth2] = React.useState('');\n\n    const handleChange1 = (event) => {\n      setSelectedMonth1(event.target.value);\n    };\n    const handleChange2 = (event) => {\n      setSelectedMonth2(event.target.value);\n    };\n    const [dataSource, setDataSource] = useState({\n      datasets: [\n        {\n          data: [],\n          backgroundColor: [],\n          expense: [],\n          month: [],\n        },\n      ],\n      labels: [],\n    });\n    const createChart = () => {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n    \n      const filteredExpenses = dataSource.datasets[0].expense.filter(\n        (expense, index) => dataSource.datasets[0].month[index] === selectedMonth1\n      );\n      const filteredBudget = dataSource.datasets[0].data.filter(\n        (budget, index) => dataSource.datasets[0].month[index] === selectedMonth1\n      );\n      const filteredLabels = dataSource.labels.filter(\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth1\n      );\n    \n      if (filteredLabels.length === 0) {\n        // If no expenses for the selected month, display a message\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n      } else {\n      new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: filteredLabels,\n          datasets: [\n            {\n              label: 'Total Budget',\n              data: filteredBudget,\n              backgroundColor: 'rgba(0, 0, 139, 0.65)',\n              borderWidth: 1,\n            },\n            {\n              label: 'Expense',\n              data: filteredExpenses,\n              backgroundColor: 'rgba(255, 99, 132, 0.6)',\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          scales: {\n            y: {\n              display: false,\n            },\n          },\n        },\n      });\n    };\n  };\n\n    const createPieChart = () => {\n      const ctx = document.getElementById('chart2').getContext('2d');\n    \n      // Check if a chart instance already exists and destroy it\n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n    \n      const filteredData = dataSource.datasets[0].expense.filter(\n        (expense, index) => dataSource.datasets[0].month[index] === selectedMonth2\n      );\n      const filteredLabels = dataSource.labels.filter(\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth2\n      );\n      const filteredColors = dataSource.datasets[0].backgroundColor.filter(\n        (_, index) => dataSource.datasets[0].month[index] === selectedMonth2\n      );\n    \n      if (filteredData.length === 0) {\n        // If no expenses for the selected month, display a message\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n      } else {\n        // If there are expenses, create the pie chart\n        new Chart(ctx, {\n          type: 'pie',\n          data: {\n            labels: filteredLabels,\n            datasets: [\n              {\n                data: filteredData,\n                backgroundColor: filteredColors, // Use colors from the database\n                borderWidth: 1,\n              },\n            ],\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            legend: {\n              position: 'right',\n            },\n          },\n        });\n      }\n    };\n    const date = new Date();\n    const monthName = months[date.getMonth()];\n    console.log(monthName);\n    const createStackedLineChart = () => {\n      const ctx = document.getElementById('chart3').getContext('2d');\n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n      const filteredExpenses = dataSource.datasets[0].expense.filter(\n        (expense, index) => dataSource.datasets[0].month[index] === monthName.toLowerCase()\n      );\n      const filteredBudget = dataSource.datasets[0].data.filter(\n        (budget, index) => dataSource.datasets[0].month[index] === monthName.toLowerCase()\n      );\n      \n      if (filteredBudget.length === 0) {\n        // If no expenses for the selected month, display a message\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('No expenses this month', ctx.canvas.width / 2, ctx.canvas.height / 2);\n      } else {\n      const amountDifference = filteredBudget.map((budget, index) => {\n        const expenses = filteredExpenses[index];\n        return budget - expenses;\n      });\n    \n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: dataSource.labels,\n          datasets: [\n            {\n              label: 'Budget',\n              data: filteredBudget,\n              borderColor: 'rgba(0, 255, 0, 0.8)',\n              backgroundColor: 'rgba(0, 255, 0, 0.2)',\n              borderWidth: 2,\n              fill: 'origin',\n            },\n            {\n              label: 'Expenses',\n              data: filteredExpenses,\n              borderColor: 'rgba(255, 0, 0, 0.8)',\n              backgroundColor: 'rgba(255, 0, 0, 0.2)',\n              borderWidth: 2,\n              fill: '-1',\n            },\n            {\n              label: 'Amount Difference',\n              data: amountDifference,\n              borderColor: 'rgba(0, 0, 255, 0.8)',\n              backgroundColor: 'rgba(0, 0, 255, 0.2)',\n              borderWidth: 2,\n              fill: '-1',\n            },\n          ],\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Months',\n              },\n            },\n            y: {\n              display: true,\n              title: {\n                display: true,\n                text: 'Amount',\n              },\n            },\n          },\n        },\n      });\n    };\n  };\n    \n    useEffect(() => {\n      createPieChart(); \n    }, [selectedMonth2, dataSource]);\n    useEffect(() => {\n      createChart(); \n    }, [selectedMonth1, dataSource]);\n\n    const getBudget = () => {\n      axios\n        .get(`https://seashell-app-pjx64.ondigitalocean.app/api/budget/${username}`, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        })\n        .then(function (res) {\n          console.log(res.data);\n          for (var i = 0; i < res.data.length; i++) {\n            dataSource.datasets[0].data[i] = res.data[i].budget;\n            dataSource.labels[i] = res.data[i].title;\n            dataSource.datasets[0].backgroundColor[i] = res.data[i].color;\n            dataSource.datasets[0].expense[i] = res.data[i].expense;\n            dataSource.datasets[0].month[i] = res.data[i].month;\n          }\n          // createChart();\n          createStackedLineChart();\n        })\n        .catch(function (error) {\n          console.error('Error fetching budget data:', error);\n        });\n    };\n\n    useEffect(() => {\n      getBudget();\n    }, []);\n\n    return (\n      <div className=\"dashboard\">\n        <section className=\"dash-head\">\n          <h1 className=\"dashboard-head\">Welcome to <b>{username}'s </b>Dashboard</h1>\n          <Link to=\"/newcategory\" className=\"create-category\">\n            Add/ Modify Categories\n          </Link>\n          <Link to=\"/deletecategory\" className=\"create-category\">\n            Delete Categories\n          </Link>\n          <Link to=\"/login\" className=\"logout-link\">\n            Logout\n          </Link>\n        </section>\n        <section className=\"charts\">\n  <article className=\"chart chart1\">\n    <h3>Budget and Expenses based on Category for {selectedMonth1}</h3>\n    <label>\n  Select a month:\n  <select value={selectedMonth1} onChange={handleChange1} aria-label=\"Select a month\">\n    <option value={''} disabled hidden>\n      Select a month\n    </option>\n    {options.map((option) => (\n      <option key={option.value} value={option.value}>\n        {option.label}\n      </option>\n    ))}\n  </select>\n</label>\n    <div>\n      <canvas id=\"myChart\"> </canvas>\n    </div>\n  </article>\n  <article className=\"chart chart2\">\n    <h3>All the expenses for <b>{selectedMonth2}</b> </h3>\n    <div>\n    <label>\n  Select a month:\n  <select value={selectedMonth2} onChange={handleChange2} aria-label=\"Select a month\">\n    <option value={''} disabled hidden>\n      Select a month\n    </option>\n    {options.map((option) => (\n      <option key={option.value} value={option.value}>\n        {option.label}\n      </option>\n    ))}\n  </select>\n</label>\n      <div>\n        <canvas id=\"chart2\"> </canvas>\n      </div>\n    </div>\n  </article>\n  <article className=\"chart chart3\">\n    <h3>Ranges for budget and expenses for this month </h3>\n    <div>\n      <canvas id=\"chart3\"> </canvas>\n    </div>\n  </article>\n</section>\n      </div>\n    );\n  }\n\n  export default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}